package com.mycom.mydb.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.mycom.mydb.dto.EmpDto;
import com.mycom.mydb.service.EmpService;

// 사원 관리 
@RestController
//@RequestMapping("student")
public class EmpController {

	private final EmpService empService;

	public EmpController(EmpService empService) {
		super();
		this.empService = empService;
	}

    // 사원 상세
    @GetMapping(value = "/empDetail/{employeeId}")
    public EmpDto empDetail(@PathVariable int employeeId) {
        System.out.println(employeeId);
        EmpDto empDto = empService.empDetail(employeeId);
        return empDto;
    }

	// 사원 목록
	@GetMapping(value = "/empList")
	public List<EmpDto> empList() {
		List<EmpDto> list = empService.empList();
		return list;
	}

	// 사원 넣기
	@PostMapping(value = "/empInsert")
	public Map<String, String> insertEmp(EmpDto dto) {
		int ret = empService.empInsert(dto);
		Map<String, String> map = new HashMap<>();

		if (ret == 1) {
			map.put("result", "success");

		} else {
			map.put("result", "fail");

		}
		return map;
	}

	// 사원 넣기
	@PostMapping(value = "/empInsertJSON")
	public Map<String, String> insertEmpJSON(@RequestBody EmpDto dto) {
		int ret = empService.empInsert(dto);
		Map<String, String> map = new HashMap<>();

		if (ret == 1) {
			map.put("result", "success");

		} else {
			map.put("result", "fail");

		}
		return map;
	}

	// 사원 수정하기
	@PostMapping(value = "/empUpdate")
	public Map<String, String> updateEmp(EmpDto dto) {
		int ret = empService.empUpdate(dto);
		Map<String, String> map = new HashMap<>();

		if (ret == 1) {
			map.put("result", "success");

		} else {
			map.put("result", "fail");

		}
		return map;
	}

	// 사원 삭제하기
	@GetMapping(value = "/empDelete/{employeeId}")
	public Map<String, String> deleteEmp(@PathVariable int employeeId) {
		int ret = empService.empDelete(employeeId);
		Map<String, String> map = new HashMap<>();

		if (ret == 1) {
			map.put("result", "success");

		} else {
			map.put("result", "fail");

		}
		return map;
	}

}
